@model BookViewModel
@inject BusinessLogicLayer.Interfaces.IUnitOfWork _unitOfWork
@inject DataAccessLayerEF.Context.EtammenDbContext _dbContext

@{
    string[] includes = { "Clinics", "DoctorReviews", "ApplicationUser" };

    int id = Model.Id;
    int doctoriD = ViewBag.DoctorID;
    var doctors = await _unitOfWork.Doctors.FindBy(d => d.Id == doctoriD, includes);
    var fullName = $"{doctors.ApplicationUser.FirstName} {doctors.ApplicationUser.LastName}";

    var openingDaysValues = Enum.GetValues(typeof(OpeningDays)).Cast<OpeningDays>();


}
<style>
    .btn-outline-purple {
        color: #800080;
        background-color: transparent;
        border-color: #800080;
        width: 60px;
    }

        .btn-outline-purple:hover {
            color: #fff;
            background-color: #800080;

            border-color: #800080; 
        }
</style>

<form asp-action="BookConfirmed" asp-controller="Patient" method="post">
    <div class="row" style="display:inline-block">
        <div class="col-20">
            <div class="doctor-card" style="height: 650px;">
                <div class="doctor-card__image">
                    <img src="/files/Images/@Model.Doctor.ProfilePicture" alt="Dr. Abdellatif Hamouda">
                </div>
                <div class="doctor-card__details">
                    <h2 class="doctor-card__name">Dr: @fullName</h2>
                    <p class="doctor-card__description">Experience Years: @Model.Doctor.YearsOfExperience years</p>
                    <div class="doctor-card__specialties">
                        <h3 class="specialty-title">Specialized in:</h3>

                        <ul class="specialty-list">
                            <li>
                                <p>@Model.Doctor.Degree in @Model.Doctor.Speciality</p>
                            </li>
                            <li>
                                @{
                                    int patientId = ViewBag.patientID;
                                }
                                <label asp-for="ISHomeVisit" id="doctorvisithomelabel">Doctor Can Visit Home</label>
                                <input asp-for="ISHomeVisit" value="@Model.ISHomeVisit" disabled id="doctorvisithome" />
                                <input type="hidden" asp-for="patientId" value="@patientId" />
                                <input type="hidden" asp-for="Date" value="@DateOnly.FromDateTime(DateTime.Now)" />
                                <input type="hidden" asp-for="IsAttended" value="@false" />
                                <input type="hidden" asp-for="DoctorId" value="@Model.DoctorId" />
                                <input type="hidden" asp-for="ClinicId" value="@Model.Clinic.Id" id="ClinicId" />
                                <input type="hidden" asp-for="ClinicName" value="@Model.Clinic.Name" />
                                <input type="hidden" asp-for="ISHomeAppointmentDeleted" value="@Model.ISHomeAppointmentDeleted" />

                            </li>

                        </ul>
                        <ul class="specialty-list" style="margin-left:30px">
                            <li id="homeVisitFeesSection">
                                <label asp-for="HomeVisitFees"> Home Visit Fees</label>
                                <label asp-for="HomeVisitFees">@String.Format("{0:N0}", @Model.HomeVisitFees)$</label>
                            </li>
                            <li id="homeRequestSection">
                                <label asp-for="ISHomeVisit">Request Appointment At Home: </label>
                                <input type="checkbox" asp-for="ISHomeVisit"  id="homeVisit" />
                            </li>
                            <li>
                              
                                <label id="doctorClinics">Doctor's Clinic</label>
                             <div class="checkbox" id="clinicnameandfees" >
                                        <label>
                                        <Label asp-for="ClinicId"  > @Model.Clinic.Name</label>  <label asp-for="ClinicFees" style="margin-left:300px"> Clinic Fees      @String.Format("{0:N0}", @Model.Clinic.Fees)$</label>
                                        </label>
                                    </div>
                                    
                                
                            </li>
                            <li>
                                <div style="margin-left:200px;display:inline-block">
                                <label asp-for="IsPaidOnline" ></label>
                                <input  asp-for="IsPaidOnline"> 
                                </div>
                                <label id="reservationPhrase"> Reservation Time available for bookings today (@DateOnly.FromDateTime(DateTime.Now) at the clinic</label>

                                @{
                                    int index = 0;
                                }
                                <div id="reservationDiv">
                                @{
                                    for (int i = 0; i <= (int)ViewData[$"clinic{index}"]; i++)
                                    {
                                        TimeSpan openingHour = Model.Clinic.OpeningHour.ToTimeSpan();
                                        TimeSpan closingHour = Model.Clinic.ClosingHour.ToTimeSpan();
                                        TimeSpan examinationDuration = Model.Clinic.ExmainationDuration.ToTimeSpan(); 

                                        TimeSpan appointmentTime = openingHour + TimeSpan.FromMinutes(i * examinationDuration.TotalMinutes);
                                        DateTime appointmentDateTime = DateTime.Today.Add(appointmentTime);

                                        TimeOnly appointmentSlot = TimeOnly.FromDateTime(appointmentDateTime);

                                        var clinicId = Model.Clinic.Id; 
                                        List<TimeOnly?> list = Model.ClinicAppointmentDictionary.ContainsKey(clinicId) ? Model.ClinicAppointmentDictionary[clinicId] : new List<TimeOnly?>();

                                        var isAppointmentSlotTaken = list.Contains(appointmentSlot);

                                                    <div class="checkbox reservation-slot clinic-@(Model.Clinic.Id)" id="reservation">
                                                        <label>
                                                            @if (isAppointmentSlotTaken)
                                                {
                                                                <input type="radio" asp-for="ReservtionPeriodNumber" value="@appointmentSlot" disabled />
                                                }
                                                else
                                                {
                                                                <input type="radio" asp-for="ReservtionPeriodNumber" value="@appointmentSlot" />
                                                }
                                                            <span id="ReservationPeriod">@appointmentSlot</span>
                                                        </label>
                                                    </div>
                                    }
                                    index++;
                                }
                                </div>
                            </li>

                        </ul>

                    </div>
                </div>





            </div>
        </div>
    </div>
    <div style="margin-left:650px">
        <input type="submit" value="Book" class="btn btn-outline-primary" id="bookButton"> 
     
    </div>
</form>
<script>
    
    document.addEventListener("DOMContentLoaded", function () {
        // Add event listener to home visit checkbox
        var homeVisit = document.getElementById("homeVisit");
        homeVisit.addEventListener("change", function () {
            // Toggle visibility of clinic checkboxes and reservation slots
            var isChecked = !homeVisit.checked;
            // clinicCheckboxes.forEach(function (checkbox) {
            //     checkbox.closest('.checkbox').style.display = isChecked ? 'block' : 'none';
            // });
            var reservationSlots = document.querySelectorAll('.reservation-slot');
            reservationSlots.forEach(function (slot) {
                slot.style.display = isChecked ? 'block' : 'none';
            });

            // Update reservation phrase
            var reservationPhrase = document.getElementById("reservationPhrase");
            reservationPhrase.textContent = isChecked ? 'Reservation Time available for bookings today at the clinic' : 'Requesting Home Appointment';

            // Update doctor's clinic label
            var doctorClinics = document.getElementById("doctorClinics");
            doctorClinics.textContent = isChecked ? "Clinic Name" : ""; 
            
            var clinicidValue = document.getElementById('ClinicId');
            clinicidValue.value = isChecked ? "@Model.Clinic.Id" : "";

            var clinicnameandfees = document.getElementById('clinicnameandfees');
            clinicnameandfees.style.display = isChecked ? 'block' :'none';

            var homeVisitFeesSection = document.getElementById('homeVisitFeesSection');
            homeVisitFeesSection.style.display = isChecked ? 'block' :'none';

            // Reset reservation period and clinic ID when home visit is unchecked
            if (isChecked) {
                var reservationPeriod = document.getElementById("ReservationPeriod");
                reservationPeriod.value = "";

                var clinicId = document.querySelector('input[name="ClinicId"]:checked');
                if (clinicId) {
                    clinicId.checked = false;
                }
            }
        });

        // Get the selected clinic ID and retrieve its corresponding name and fees
        var doctorvisithomeinput = document.getElementById('doctorvisithome');
        var doctorvisithomelabel = document.getElementById('doctorvisithomelabel');
        var homeRequestSection = document.getElementById('homeRequestSection');
        var reservationDiv = document.getElementById('reservationDiv');
        var reservationPhrase = document.getElementById('reservationPhrase');
        

        if (!doctorvisithomeinput.checked) {
            doctorvisithomelabel.textContent = "Doctor is not taking home visit requests";
            homeRequestSection.style.display = 'none';
            doctorvisithomeinput.style.display = 'none';
            
            homeVisitFeesSection.style.display = 'none';
            // doctorvisithomeinput.style.display = 'none';
            // reservationDiv.style.display = 'none';
            // reservationPhrase.style.display = 'none';
           
        }
      
        // Initially show/hide clinic checkboxes and reservation slots based on home visit checkbox state
        var isChecked = homeVisit.checked;
        clinicCheckboxes.forEach(function (checkbox) {
            checkbox.closest('.checkbox').style.display = isChecked ? 'block' : 'none';
        });
        var reservationSlots = document.querySelectorAll('.reservation-slot');
        reservationSlots.forEach(function (slot) {
            slot.style.display = 'block';
        });
    });
</script>

